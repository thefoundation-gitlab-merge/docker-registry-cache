name: build

# Controls when the workflow will run
on:
  push:
    branches:
      - 'main'
      - 'dev'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'
      - 'dev'
  release:
    types:
      - published

# permissions are needed if pushing to ghcr.io
permissions: 
  packages: write

env:
  REGISTRY_GITHUB: ghcr.io
  REGISTRY_DOCKER: index.docker.io
  GH_IMAGE_NAME: ${{ github.repository }}

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

#      - name: Meta Data
#        id: meta # you'll use this in the next step
#        uses: docker/metadata-action@v3
#        with:
#          # list of Docker images to use as base name for tags
#          images: |
#            websync
#          # Docker tags based on the following events/attributes
#          tags: |
#            type=schedule
#            type=ref,event=branch
#            type=ref,event=pr
#            type=semver,pattern={{version}}
#            type=semver,pattern={{major}}.{{minor}}
#            type=semver,pattern={{major}}
#            type=sha

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY_GITHUB }}/${{ env.GH_IMAGE_NAME }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          registry: ghcr.io
          platforms: linux/amd64,linux/arm64/v8
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
